name: Test and Merge Clash Configs

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 */2 * * *' # 每两小时执行一次
  workflow_dispatch:

jobs:
  test-and-merge:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Dependencies
        run: |
          pip install pyyaml requests
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq
          sudo wget -qO /usr/local/bin/clashmeta https://github.com/MetaCubeX/Clash.Meta/releases/latest/download/clash.meta-linux-amd64
          sudo chmod +x /usr/local/bin/clashmeta

      - name: List YAML Files
        id: list_yaml
        run: |
          echo "files=$(ls *.yaml | xargs)" >> $GITHUB_OUTPUT

      - name: Create Temp Dir
        id: create_tmp
        run: |
          tmpdir=$(mktemp -d)
          echo "tmpdir=$tmpdir" >> $GITHUB_OUTPUT

      - name: Test Proxies, Deduplicate, Save Valid Ones
        env:
          FILES: ${{ steps.list_yaml.outputs.files }}
          TMP_DIR: ${{ steps.create_tmp.outputs.tmpdir }}
        run: |
          cat > "$TMP_DIR/template.yaml" << EOL
# Merged Clash Config
proxy-groups:
  - name: "Proxy"
    type: select
    proxies:
      - DIRECT
rules:
  - MATCH,Proxy
EOL

          declare -A unique_proxies
          valid_proxies=()

          for file in $FILES; do
            echo "=== Testing config: $file ==="

            cp "$file" "$TMP_DIR/config.yaml"

            clashmeta -f "$TMP_DIR/config.yaml" -d "$TMP_DIR" &
            clash_pid=$!
            sleep 10

            export http_proxy="http://127.0.0.1:7890"
            export https_proxy="http://127.0.0.1:7890"

            if curl -I --silent --connect-timeout 10 https://www.google.com | grep -q "200 OK"; then
              echo "✅ Proxy in $file works."

              yq '.proxies[].name' "$TMP_DIR/config.yaml" | while read -r proxy_name; do
                if [[ -z "${unique_proxies[$proxy_name]}" ]]; then
                  unique_proxies["$proxy_name"]=1
                  valid_proxies+=("$proxy_name")
                  yq '.proxies[] | select(.name == "'"$proxy_name"'")' "$TMP_DIR/config.yaml" >> "$TMP_DIR/proxies.yaml"
                else
                  echo "⚠️ Duplicate proxy skipped: $proxy_name"
                fi
              done

            else
              echo "❌ Proxy in $file does NOT work."
            fi

            kill $clash_pid || true
            sleep 2
          done

          cat "$TMP_DIR/template.yaml" > merged-config.yaml

          if [ -f "$TMP_DIR/proxies.yaml" ]; then
            echo "proxies:" >> merged-config.yaml
            cat "$TMP_DIR/proxies.yaml" >> merged-config.yaml

            echo "proxy-groups:" >> merged-config.yaml
            echo "  - name: \"Proxy\"" >> merged-config.yaml
            echo "    type: select" >> merged-config.yaml
            echo "    proxies:" >> merged-config.yaml
            echo "      - DIRECT" >> merged-config.yaml

            for name in "${valid_proxies[@]}"; do
              echo "      - \"$name\"" >> merged-config.yaml
            done
          else
            echo "proxies: []" >> merged-config.yaml
          fi

          echo "✅ Final merged config saved to merged-config.yaml"
          cat merged-config.yaml

          echo "# Valid Proxies" > README.md
          echo "" >> README.md
          echo "| Proxy Name |" >> README.md
          echo "|------------|" >> README.md
          for name in "${valid_proxies[@]}"; do
            echo "| $name |" >> README.md
          done

          echo "" >> README.md
          echo "⏰ Last Update: $(date '+%Y-%m-%d %H:%M:%S')" >> README.md

      - name: Commit and Push Merged File & README
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add merged-config.yaml README.md
          git commit -m "Update merged clash config & README $(date '+%Y-%m-%d %H:%M:%S')" || echo "Nothing to commit"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
