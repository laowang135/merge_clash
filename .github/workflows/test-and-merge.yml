name: Test and Merge Clash Configs

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 */2 * * *' # 每2小时执行一次
  workflow_dispatch:

jobs:
  test-and-merge:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Dependencies
        run: |
          pip install pyyaml requests yq clashmeta-launcher

      - name: Create Temp Dir
        run: |
          tmpdir=$(mktemp -d)
          echo "TMP_DIR=$tmpdir" >> $GITHUB_ENV

      - name: Download Config List
        run: |
          curl -s -o config-list.txt https://raw.githubusercontent.com/${{ github.repository }}/main/config-list.txt

      - name: Download All Configs
        run: |
          while IFS= read -r url; do
            filename=$(basename "$url")
            curl -s -o "$TMP_DIR/$filename" "$url"
          done < config-list.txt

      - name: Create Merged Config Template
        run: |
          cat > "$TMP_DIR/template.yaml" <<EOF
# Merged Clash Config
proxy-groups:
  - name: "Proxy"
    type: select
    proxies:
      - DIRECT
rules:
  - MATCH,Proxy
EOF

      - name: Test Proxies and Merge Valid Ones
        run: |
          valid_proxies=()

          for file in "$TMP_DIR"/*.yaml; do
            echo "=== Testing config: $file ==="

            proxy_name=$(yq e '.proxies[0].name' "$file")
            [ -z "$proxy_name" ] && proxy_name="Proxy-$(basename "$file")"

            cp "$file" "$TMP_DIR/config.yaml"

            clashmeta -f "$TMP_DIR/config.yaml" -d "$TMP_DIR" &
            clash_pid=$!
            sleep 10

            export http_proxy="http://127.0.0.1:7890"
            export https_proxy="http://127.0.0.1:7890"

            if curl -I --silent --connect-timeout 10 https://www.google.com | grep -q "200 OK"; then
              echo "✅ Proxy in $file works."
              valid_proxies+=("$proxy_name")
              yq e ".proxies[] | select(.name == \"$proxy_name\")" "$TMP_DIR/config.yaml" >> "$TMPDIR/proxies.yaml"
            else
              echo "❌ Proxy in $file does NOT work."
            fi

            kill $clash_pid || true
            sleep 2
          done

          cat "$TMP_DIR/template.yaml" > merged-config.yaml
          if [ -f "$TMP_DIR/proxies.yaml" ]; then
            echo "proxies:" >> merged-config.yaml
            cat "$TMP_DIR/proxies.yaml" >> merged-config.yaml

            echo "proxy-groups:" >> merged-config.yaml
            echo "  - name: \"Proxy\"" >> merged-config.yaml
            echo "    type: select" >> merged-config.yaml
            echo "    proxies:" >> merged-config.yaml
            echo "      - DIRECT" >> merged-config.yaml

            for name in "${valid_proxies[@]}"; do
              echo "      - $name" >> merged-config.yaml
            done
          else
            echo "proxies: []" >> merged-config.yaml
          fi

          echo "✅ Final merged config saved to merged-config.yaml"
          cat merged-config.yaml
