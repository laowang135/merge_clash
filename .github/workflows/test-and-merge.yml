name: Test and Merge Clash Configs

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 */2 * * *' # 每两个小时
  workflow_dispatch:

jobs:
  test-and-merge:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Dependencies
        run: |
          pip install pyyaml requests clashmeta-launcher

      - name: Create Temp Dir and Time Vars
        id: create_tmp
        run: |
          tmpdir=$(mktemp -d)
          date_short=$(date '+%Y%m%d')
          echo "tmpdir=$tmpdir" >> $GITHUB_OUTPUT
          echo "date_short=$date_short" >> $GITHUB_OUTPUT

      - name: Read Config URLs and Download Files
        env:
          TMP_DIR: ${{ steps.create_tmp.outputs.tmpdir }}
        run: |
          cd "$TMP_DIR"
          while read url; do
            [ -z "$url" ] && continue
            filename=$(basename "$url")
            echo "Downloading $filename from $url"
            curl -sSL -o "$filename" "$url"
            if [ ! -s "$filename" ]; then
              echo "❌ Download failed or empty: $url"
              exit 1
            else
              echo "✅ Downloaded: $filename"
              echo "$filename" >> "$GITHUB_WORKSPACE/file_list.txt"
            fi
          done < "$GITHUB_WORKSPACE/config-list.txt"

      - name: Test and Merge Configs
        env:
          TMP_DIR: ${{ steps.create_tmp.outputs.tmpdir }}
          DATE_SHORT: ${{ steps.create_tmp.outputs.date_short }}
        run: |
          cd "$TMP_DIR"
          OUTPUT="${DATE_SHORT}.yaml"
          README="${DATE_SHORT}.md"

          cat > template.yaml << EOL
# Merged Clash Config
proxy-groups:
  - name: "Proxy"
    type: select
    proxies:
      - DIRECT
rules:
  - MATCH,Proxy
EOL

          declare -A unique_proxies
          valid_proxies=()

          while read filename; do
            echo "=== Testing $filename ==="
            cp "$filename" config.yaml

            clashmeta -f config.yaml -d "$TMP_DIR" &
            clash_pid=$!
            sleep 10

            export http_proxy="http://127.0.0.1:7890"
            export https_proxy="http://127.0.0.1:7890"

            if curl -I --silent --connect-timeout 10 https://www.google.com | grep -q "200 OK"; then
              echo "✅ $filename works."
              yq '.proxies[].name' config.yaml | while read -r proxy_name; do
                if [[ -z "${unique_proxies[$proxy_name]}" ]]; then
                  unique_proxies["$proxy_name"]=1
                  valid_proxies+=("$proxy_name")
                  yq '.proxies[] | select(.name == "'"$proxy_name"'")' config.yaml >> proxies.yaml
                fi
              done
            else
              echo "❌ $filename does NOT work."
            fi

            kill $clash_pid || true
            sleep 2

          done < "$GITHUB_WORKSPACE/file_list.txt"

          cat template.yaml > "$GITHUB_WORKSPACE/$OUTPUT"

          if [ -f proxies.yaml ]; then
            echo "proxies:" >> "$GITHUB_WORKSPACE/$OUTPUT"
            cat proxies.yaml >> "$GITHUB_WORKSPACE/$OUTPUT"

            echo "proxy-groups:" >> "$GITHUB_WORKSPACE/$OUTPUT"
            echo "  - name: \"Proxy\"" >> "$GITHUB_WORKSPACE/$OUTPUT"
            echo "    type: select" >> "$GITHUB_WORKSPACE/$OUTPUT"
            echo "    proxies:" >> "$GITHUB_WORKSPACE/$OUTPUT"
            echo "      - DIRECT" >> "$GITHUB_WORKSPACE/$OUTPUT"

            for name in "${valid_proxies[@]}"; do
              echo "      - \"$name\"" >> "$GITHUB_WORKSPACE/$OUTPUT"
            done
          else
            echo "proxies: []" >> "$GITHUB_WORKSPACE/$OUTPUT"
          fi

          echo "✅ Final merged config saved to $OUTPUT"

          echo "# Valid Proxies" > "$GITHUB_WORKSPACE/$README"
          echo "" >> "$GITHUB_WORKSPACE/$README"
          echo "| Proxy Name |" >> "$GITHUB_WORKSPACE/$README"
          echo "|------------|" >> "$GITHUB_WORKSPACE/$README"
          for name in "${valid_proxies[@]}"; do
            echo "| $name |" >> "$GITHUB_WORKSPACE/$README"
          done
          echo "" >> "$GITHUB_WORKSPACE/$README"
          echo "⏰ Last Update: $(date '+%Y-%m-%d %H:%M:%S')" >> "$GITHUB_WORKSPACE/$README"

      - name: Commit and Push Merged File
        env:
          DATE_SHORT: ${{ steps.create_tmp.outputs.date_short }}
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add "${DATE_SHORT}.yaml" "${DATE_SHORT}.md"
          git commit -m "Update merged clash config ${DATE_SHORT}" || echo "Nothing to commit"
          git push
