name: Test and Merge Clash Proxies

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 */2 * * *'  # 每2小时执行一次
  workflow_dispatch:

jobs:
  test-and-merge:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip git wget

      - name: Install yq
        run: |
          sudo wget -O /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq

      - name: Install Python dependencies
        run: |
          pip3 install requests pyyaml

      - name: Clone clash-speedtest repo
        run: |
          git clone https://github.com/faceair/clash-speedtest.git

      - name: Verify clash-speedtest files
        run: ls -l clash-speedtest/

      - name: Merge all proxies from configs/*.yaml into merged.yaml
        run: |
          mkdir -p output
          if [ ! -d "configs" ]; then
            echo "❌ configs 目录不存在，退出"
            exit 1
          fi
          yq eval-all '. as $item ireduce ({}; .proxies += $item.proxies )' configs/*.yaml > output/merged.yaml

      - name: Run clash-speedtest to test proxies
        run: |
          python3 clash-speedtest/clash-speedtest.py \
            -c output/merged.yaml \
            --timeout 5 \
            --threshold 200 \
            --test-url "https://github.com" \
            --result output/speedtest_result.yaml

      - name: Generate final merged config with valid proxies (delay < 200ms)
        run: |
          OUTPUT_FILE="output/final_merged.yaml"
          echo "# 合并后的 Clash 配置文件" > "$OUTPUT_FILE"
          echo "proxies:" >> "$OUTPUT_FILE"
          yq e '.proxies[] | select(.delay != null and .delay < 200)' output/speedtest_result.yaml >> "$OUTPUT_FILE"

          echo "proxy-groups:" >> "$OUTPUT_FILE"
          echo "  - name: \"Proxy\"" >> "$OUTPUT_FILE"
          echo "    type: select" >> "$OUTPUT_FILE"
          echo "    proxies:" >> "$OUTPUT_FILE"
          echo "      - DIRECT" >> "$OUTPUT_FILE"

          mapfile -t proxy_names < <(yq e '.proxies[].name' output/speedtest_result.yaml | grep -v null)
          for p in "${proxy_names[@]}"; do
            echo "      - $p" >> "$OUTPUT_FILE"
          done

          echo "rules:" >> "$OUTPUT_FILE"
          echo "  - MATCH,Proxy" >> "$OUTPUT_FILE"

      - name: Commit and Push final merged file
        if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          git add output/final_merged.yaml
          git commit -m "Auto update output/final_merged.yaml with valid proxies" || echo "No changes to commit"
          git push origin HEAD:${{ github.ref_name }}
