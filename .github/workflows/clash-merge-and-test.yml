name: Clash - Merge & Test Proxies

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 */2 * * *'  # 每2小时执行一次
  workflow_dispatch:

jobs:
  test-and-merge:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python and Git
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip git

      - name: Install yq
        run: |
          sudo wget -O /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq

      - name: Clone clash-speedtest
        run: |
          git clone https://github.com/faceair/clash-speedtest.git

      - name: Debug: Check files
        run: |
          ls -la clash-speedtest/

      - name: Install dependencies
        run: |
          pip3 install requests

      - name: Merge all proxies into merged.yaml
        run: |
          mkdir -p output
          if [ "$(ls -A configs/*.yaml 2>/dev/null)" ]; then
            echo "开始合并所有 YAML 文件"
            yq eval-all '. as $item ireduce ({}; .proxies += $item.proxies )' configs/*.yaml > output/merged.yaml
          else
            echo "❌ configs 目录中没有 YAML 文件"
            exit 1
          fi

      - name: Start Clash in background
        run: |
          wget https://github.com/Dreamacro/clash/releases/download/v1.19.0/clash-linux-amd64-v1.19.0.gz
          gunzip clash-linux-amd64-v1.19.0.gz
          chmod +x clash-linux-amd64-v1.19.0
          sudo mv clash-linux-amd64-v1.19.0 /usr/local/bin/clash
          mkdir -p ~/.config/clash/
          cp output/merged.yaml ~/.config/clash/config.yaml
          nohup clash -d ~/.config/clash/ > /tmp/clash.log 2>&1 &
          sleep 5  # 等待 Clash 启动完成

      - name: Run clash-speedtest
        working-directory: clash-speedtest
        run: |
          python3 speedtest.py -c ../output/merged.yaml --proxy http://localhost:7890 --threshold 200 > ../output/speedtest_result.yaml

      - name: Generate final config with valid proxies
        run: |
          OUTPUT_FILE="output/final_merged.yaml"

          echo "# 合并后的 Clash 配置文件" > "$OUTPUT_FILE"
          echo "proxies:" >> "$OUTPUT_FILE"
          yq e '.proxies[] | select(.delay != null and .delay < 200)' output/speedtest_result.yaml >> "$OUTPUT_FILE"

          echo "proxy-groups:" >> "$OUTPUT_FILE"
          echo "  - name: \"Proxy\"" >> "$OUTPUT_FILE"
          echo "    type: select" >> "$OUTPUT_FILE"
          echo "    proxies:" >> "$OUTPUT_FILE"
          echo "      - DIRECT" >> "$OUTPUT_FILE"

          mapfile -t proxy_names < <(yq e '.proxies[].name' output/speedtest_result.yaml | grep -v null)
          for p in "${proxy_names[@]}"; do
            echo "      - $p" >> "$OUTPUT_FILE"
          done

          echo "rules:" >> "$OUTPUT_FILE"
          echo "  - MATCH,Proxy" >> "$OUTPUT_FILE"

      - name: Commit and Push Merged File
        if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
        run: |
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git fetch origin
          git checkout ${{ github.ref_name }}

          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          git add output/final_merged.yaml
          git commit -m "Auto update output/final_merged.yaml with valid proxies"
          git push origin HEAD:${{ github.ref_name }}
