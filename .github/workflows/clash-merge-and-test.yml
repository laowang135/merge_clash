name: Test and Merge Clash Proxies Per File

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 */2 * * *'  # 每2小时执行一次
  workflow_dispatch:

jobs:
  test-and-merge:
    runs-on: ubuntu-latest
    env:
      TEST_SERVER_URL: "https://speed.cloudflare.com"  # 自定义测速服务器地址

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install yq for YAML processing
        run: |
          sudo wget -O /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq

      - name: Setup Go environment
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Install clash-speedtest binary
        run: |
          go install github.com/faceair/clash-speedtest@latest
          echo "$HOME/go/bin" >> $GITHUB_PATH

      - name: Prepare output directory
        run: mkdir -p output/filtered

      - name: List config YAML files
        id: listfiles
        run: |
          files=$(ls configs/*.yaml 2>/dev/null || echo "")
          files_one_line=$(echo $files | tr '\n' ' ' | sed 's/  */ /g' | xargs)
          echo "files=$files_one_line" >> $GITHUB_OUTPUT

      - name: Test each config and filter proxies
        run: |
          if [ -z "${{ steps.listfiles.outputs.files }}" ]; then
            echo "No config files found, skipping."
            exit 0
          fi
          for file in ${{ steps.listfiles.outputs.files }}; do
            echo "Processing $file"
            base=$(basename "$file" .yaml)
            clash-speedtest \
              -c "$file" \
              -output "output/filtered/${base}_filtered.yaml" \
              -server-url "${TEST_SERVER_URL}" \
              -max-latency 200ms \
              -min-download-speed 1 \
              -timeout 5s \
              -rename
          done

      - name: Merge all filtered proxies into merged.yaml
        run: |
          if ls output/filtered/*_filtered.yaml 1> /dev/null 2>&1; then
            yq eval-all '. as $item ireduce ({}; .proxies += $item.proxies )' output/filtered/*_filtered.yaml > output/merged.yaml
          else
            echo "No filtered proxy files found. Creating empty merged.yaml."
            echo "proxies: []" > output/merged.yaml
          fi

      - name: Commit and Push Merged File
        if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
        run: |
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git fetch origin
          git checkout ${{ github.ref_name }}

          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          git add output/merged.yaml
          git diff --cached --quiet || git commit -m "Auto update output/merged.yaml with valid proxies"
          git push origin HEAD:${{ github.ref_name }}
