name: Test and Merge Clash Proxies

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 */2 * * *'  # 每2小时执行一次
  workflow_dispatch:

jobs:
  test-and-merge:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install yq for YAML processing
        run: |
          sudo wget -O /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq

      - name: Setup Go environment
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Install clash-speedtest binary
        run: |
          go install github.com/faceair/clash-speedtest@latest
          echo "$HOME/go/bin" >> $GITHUB_PATH

      - name: Merge all proxies from configs/*.yaml into merged.yaml
        run: |
          mkdir -p output
          if [ ! -d "configs" ]; then
            echo "❌ configs 目录不存在，跳过处理"
            exit 1
          fi
          yq eval-all '. as $item ireduce ({}; .proxies += $item.proxies )' configs/*.yaml > output/merged.yaml

      - name: Run clash-speedtest to test proxies and filter results
        run: |
          clash-speedtest \
            -c output/merged.yaml \
            -output output/final_merged.yaml \
            -max-latency 200ms \
            -min-download-speed 1 \
            -timeout 5s \
            -rename

      - name: Commit and Push Merged File
        if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
        run: |
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git fetch origin
          git checkout ${{ github.ref_name }}

          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          git add output/final_merged.yaml
          git diff --cached --quiet || git commit -m "Auto update output/final_merged.yaml with valid proxies"
          git push origin HEAD:${{ github.ref_name }}
