name: Test and Merge Clash Proxies

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 */2 * * *'  # 每2小时执行一次
  workflow_dispatch:

jobs:
  test-and-merge:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python and Git
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip git

      - name: Install Python dependencies
        run: pip3 install requests

      - name: Clone clash-speedtest
        run: git clone https://github.com/faceair/clash-speedtest.git

      - name: List clash-speedtest directory (debug)
        run: ls -l clash-speedtest/

      - name: Prepare merged config file
        run: |
          OUTPUT_DIR="output"
          OUTPUT_FILE="$OUTPUT_DIR/merged.yaml"
          mkdir -p "$OUTPUT_DIR"
          > "$OUTPUT_FILE"

          echo "开始遍历 configs 目录下的所有 YAML 文件"
          if [ ! -d "configs" ]; then
            echo "❌ configs 目录不存在，跳过处理"
            exit 1
          fi

          yq eval-all '. as $item ireduce ({}; .proxies += $item.proxies )' configs/*.yaml > "$OUTPUT_FILE"

      - name: Run clash-speedtest
        working-directory: clash-speedtest
        run: |
          python3 speedtest.py -c ../output/merged.yaml --proxy http://localhost:7890 --threshold 200 > ../output/speedtest_result.yaml

      - name: Generate final merged config
        run: |
          OUTPUT_FILE="output/final_merged.yaml"
          echo "# 合并后的 Clash 配置文件" > "$OUTPUT_FILE"
          echo "proxies:" >> "$OUTPUT_FILE"
          yq e '.proxies[] | select(.delay != null and .delay < 200)' output/speedtest_result.yaml >> "$OUTPUT_FILE"

          echo "proxy-groups:" >> "$OUTPUT_FILE"
          echo "  - name: \"Proxy\"" >> "$OUTPUT_FILE"
          echo "    type: select" >> "$OUTPUT_FILE"
          echo "    proxies:" >> "$OUTPUT_FILE"
          echo "      - DIRECT" >> "$OUTPUT_FILE"

          mapfile -t proxy_names < <(yq e '.proxies[].name' output/speedtest_result.yaml | grep -v null)
          for p in "${proxy_names[@]}"; do
            echo "      - $p" >> "$OUTPUT_FILE"
          done

          echo "rules:" >> "$OUTPUT_FILE"
          echo "  - MATCH,Proxy" >> "$OUTPUT_FILE"

      - name: Commit and Push Merged File
        if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}
          git fetch origin
          git checkout ${{ github.ref_name }}

          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          git add output/final_merged.yaml
          git commit -m "Auto update output/final_merged.yaml with valid proxies" || echo "No changes to commit"
          git push origin HEAD:${{ github.ref_name }}
